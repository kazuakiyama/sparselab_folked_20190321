# suffixes
.SUFFIXES: .o2

# INSTALLDIR
PYTHONLIBDIR=../../sparselab

CC=@CC@

# Optimization Flag
ifeq ($(OSTYPE),"LINUX")
  OPTFLAGS=-Ofast -march=native
else
  OPTFLAGS=-O3 -march=core2
endif

CFLAGS=-fPIC $(OPTFLAGS) @CFLAGS@ @LDFLAGS@

OS := $(shell uname)
ifeq ($(OS),Darwin)
	CLIBS=@LAPACK_LIBS@ @OPENBLAS_LIBS@ -lm -lpthread
else
	CLIBS=@LAPACK_LIBS@ @OPENBLAS_LIBS@ -lrt -lm -lpthread
endif

CFLAGS_FFTW = @FFTW3_CFLAGS@
CLIBS_FFTW = @FFTW3_LIBS@ @FFTW3TH_LIBS@

targets = libmfista_dft libmfista_fft
object_io = mfista_io.o
object_tools = mfista_tools.o
object_dft = looe_lib.o mfista_TV_lib.o mfista_dft_lib.o
object_fft = mfista_TV_lib.o mfista_fft_lib.o

object_tools2 = mfista_tools.o2
object_dft2 = looe_lib.o2 mfista_TV_lib.o2 mfista_dft_lib.o2
object_fft2 = mfista_TV_lib.o2 mfista_fft_lib.o2

all: $(targets)

libraries: libmfista_dft libmfista_fft

libmfista_dft: $(object_tools2) $(object_dft2)
	$(CC) $(CFLAGS) -shared $(object_dft2) $(object_tools2) -o $@.so $(CLIBS)

libmfista_fft: $(object_tools2) $(object_fft2)
	$(CC) $(CFLAGS) $(CFLAGS_FFTW) -shared $(object_fft2) $(object_tools2) -o $@.so $(CLIBS) $(CLIBS_FFTW)

.c.o:
	$(CC) -c -Wall $(CFLAGS) $(CFLAGS_FFTW) -o $@ $<

.c.o2:
	$(CC) -c -Wall -fPIC $(CFLAGS) $(CFLAGS_FFTW) -o $@ $<

clean:
	rm -f $(targets) *.o *.o2 *.so

install: all
	mkdir -p $(PYTHONLIBDIR)
	cp -p libmfista_*.so $(PYTHONLIBDIR)
	cp -p libmfista_*.so $(PYTHONLIBDIR)/imaging

uninstall: clean
	rm -f makefile
	rm -f $(PYTHONLIBDIR)/libmfista*.so
	rm -f $(PYTHONLIBDIR)/imaging/libmfista*.so
